[{"D:\\todolist-16\\src\\index.tsx":"1","D:\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","D:\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"3","D:\\todolist-16\\src\\app\\App.tsx":"4","D:\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","D:\\todolist-16\\src\\features\\Login\\Login.tsx":"6","D:\\todolist-16\\src\\api\\todolists-api.ts":"7","D:\\todolist-16\\src\\features\\Login\\auth_reducer.ts":"8","D:\\todolist-16\\src\\app\\app-reducer.ts":"9","D:\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"10","D:\\it-kamasutra.com\\new_todolist\\src\\app\\store.ts":"11","D:\\it-kamasutra.com\\new_todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"12"},{"size":752,"mtime":1621525310876,"results":"13","hashOfConfig":"14"},{"size":4019,"mtime":1621536445505,"results":"15","hashOfConfig":"14"},{"size":1773,"mtime":1596295538000,"results":"16","hashOfConfig":"14"},{"size":1956,"mtime":1621539744998,"results":"17","hashOfConfig":"14"},{"size":5633,"mtime":1596722126000,"results":"18","hashOfConfig":"14"},{"size":3561,"mtime":1621535654861,"results":"19","hashOfConfig":"14"},{"size":2902,"mtime":1621537354382,"results":"20","hashOfConfig":"14"},{"size":1521,"mtime":1621535194867,"results":"21","hashOfConfig":"14"},{"size":1678,"mtime":1621540486908,"results":"22","hashOfConfig":"14"},{"size":4585,"mtime":1597327450000,"results":"23","hashOfConfig":"14"},{"size":1182,"mtime":1621534518393,"results":"24","hashOfConfig":"25"},{"size":952,"mtime":1594154724000,"results":"26","hashOfConfig":"25"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1y37cba",{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qaotsu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\todolist-16\\src\\index.tsx",[],["53","54"],"D:\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["55","56","57","58","59","60","61","62"],"D:\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["63","64","65"],"D:\\todolist-16\\src\\app\\App.tsx",["66"],"D:\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts",["67","68"],"import {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            const tasks = res.data.items\r\n            dispatch(setTasksAC(tasks, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            const action = removeTaskAC(taskId, todolistId)\r\n            dispatch(action)\r\n        })\r\n}\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                const task = res.data.data.item\r\n                const action = addTaskAC(task)\r\n                dispatch(action)\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    const action = updateTaskAC(taskId, domainModel, todolistId)\r\n                    dispatch(action)\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch);\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","D:\\todolist-16\\src\\features\\Login\\Login.tsx",["69","70"],"D:\\todolist-16\\src\\api\\todolists-api.ts",[],"D:\\todolist-16\\src\\features\\Login\\auth_reducer.ts",["71","72"],"D:\\todolist-16\\src\\app\\app-reducer.ts",[],"D:\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["73"],"D:\\it-kamasutra.com\\new_todolist\\src\\app\\store.ts",[],"D:\\it-kamasutra.com\\new_todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":36,"column":8,"nodeType":"80","endLine":36,"endColumn":10,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":41,"column":8,"nodeType":"80","endLine":41,"endColumn":10,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"82","line":46,"column":8,"nodeType":"80","endLine":46,"endColumn":10,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"82","line":51,"column":8,"nodeType":"80","endLine":51,"endColumn":10,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"82","line":56,"column":8,"nodeType":"80","endLine":56,"endColumn":10,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"82","line":61,"column":8,"nodeType":"80","endLine":61,"endColumn":10,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"82","line":66,"column":8,"nodeType":"80","endLine":66,"endColumn":10,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"82","line":71,"column":8,"nodeType":"80","endLine":71,"endColumn":10,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"90","line":15,"column":97,"nodeType":"80","endLine":15,"endColumn":130,"suggestions":"91"},{"ruleId":"78","severity":1,"message":"90","line":20,"column":8,"nodeType":"80","endLine":20,"endColumn":41,"suggestions":"92"},{"ruleId":"78","severity":1,"message":"90","line":24,"column":8,"nodeType":"80","endLine":24,"endColumn":41,"suggestions":"93"},{"ruleId":"78","severity":1,"message":"94","line":21,"column":8,"nodeType":"80","endLine":21,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":9,"nodeType":"98","messageId":"99","endLine":5,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":13,"column":94,"nodeType":"102","messageId":"103","endLine":13,"endColumn":96},{"ruleId":"96","severity":1,"message":"104","line":4,"column":18,"nodeType":"98","messageId":"99","endLine":4,"endColumn":33},{"ruleId":"105","severity":1,"message":"106","line":60,"column":32,"nodeType":"107","endLine":60,"endColumn":49},{"ruleId":"96","severity":1,"message":"108","line":3,"column":18,"nodeType":"98","messageId":"99","endLine":3,"endColumn":30},{"ruleId":"96","severity":1,"message":"109","line":5,"column":9,"nodeType":"98","messageId":"99","endLine":5,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":10,"column":45,"nodeType":"102","messageId":"103","endLine":10,"endColumn":47},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["112"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["113"],["114"],["115"],["116"],["117"],["118"],["119"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["120"],["121"],["122"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["123"],"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setIsLoggedInAC' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'todolistsAPI' is defined but never used.","'addTaskAC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"126","fix":"129"},{"desc":"126","fix":"130"},{"desc":"126","fix":"131"},{"desc":"126","fix":"132"},{"desc":"126","fix":"133"},{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},{"desc":"134","fix":"137"},{"desc":"126","fix":"138"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"139","text":"140"},"Update the dependencies array to be: [dispatch]",{"range":"141","text":"142"},{"range":"143","text":"142"},{"range":"144","text":"142"},{"range":"145","text":"142"},{"range":"146","text":"142"},{"range":"147","text":"142"},{"range":"148","text":"142"},"Update the dependencies array to be: [props]",{"range":"149","text":"150"},{"range":"151","text":"150"},{"range":"152","text":"150"},{"range":"153","text":"142"},[1327,1329],"[demo, dispatch, isLoggedIn]",[1498,1500],"[dispatch]",[1669,1671],[1874,1876],[2087,2089],[2288,2290],[2435,2437],[2614,2616],[765,798],"[props]",[1071,1104],[1261,1294],[816,818]]